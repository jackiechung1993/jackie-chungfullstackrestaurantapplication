{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jackie-PC\\\\Documents\\\\MIT\\\\Module_29\\\\pages\\\\orderHistory.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport AppContext from \"../components/context\";\nimport fetch from \"isomorphic-fetch\";\nimport Cookies from \"js-cookie\";\n\nconst OrderHistory = () => {\n  const {\n    user\n  } = useContext(AppContext);\n  const {\n    0: orders,\n    1: setOrders\n  } = useState([]);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n      const token = Cookies.get(\"token\");\n      const response = await fetch(`${API_URL}/orders?user=${user.id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setOrders(data);\n    };\n\n    if (user) {\n      fetchOrders();\n    }\n  }, [user]);\n  if (!user) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Please log in to view your order history.\");\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Order History\"), orders.length > 0 ? orders.map(order => __jsx(Card, {\n    key: order.id,\n    style: {\n      margin: \"1rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, \"Order #\", order.id), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Date:\"), \" \", new Date(order.created_at).toLocaleDateString()), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Total:\"), \" $\", order.amount), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Dishes:\"), \" \", order.dishes.map(dish => dish.name).join(\", \"))))) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"No orders found.\"))));\n};\n\nexport default OrderHistory;","map":{"version":3,"sources":["C:/Users/Jackie-PC/Documents/MIT/Module_29/pages/orderHistory.js"],"names":["React","useContext","useEffect","useState","Container","Row","Col","Card","CardBody","CardTitle","CardText","AppContext","fetch","Cookies","OrderHistory","user","orders","setOrders","fetchOrders","API_URL","process","env","NEXT_PUBLIC_API_URL","token","get","response","id","headers","Authorization","data","json","length","map","order","margin","Date","created_at","toLocaleDateString","amount","dishes","dish","name","join"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport AppContext from \"../components/context\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst OrderHistory = () => {\r\n  const { user } = useContext(AppContext);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n      const token = Cookies.get(\"token\");\r\n\r\n      const response = await fetch(`${API_URL}/orders?user=${user.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      setOrders(data);\r\n    };\r\n\r\n    if (user) {\r\n      fetchOrders();\r\n    }\r\n  }, [user]);\r\n\r\n  if (!user) return <p>Please log in to view your order history.</p>;\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Order History</h1>\r\n          {orders.length > 0 ? (\r\n            orders.map((order) => (\r\n              <Card key={order.id} style={{ margin: \"1rem 0\" }}>\r\n                <CardBody>\r\n                  <CardTitle>Order #{order.id}</CardTitle>\r\n                  <CardText>\r\n                    <strong>Date:</strong> {new Date(order.created_at).toLocaleDateString()}\r\n                  </CardText>\r\n                  <CardText>\r\n                    <strong>Total:</strong> ${order.amount}\r\n                  </CardText>\r\n                  <CardText>\r\n                    <strong>Dishes:</strong> {order.dishes.map(dish => dish.name).join(\", \")}\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            ))\r\n          ) : (\r\n            <p>No orders found.</p>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderHistory;\r\n"]},"metadata":{},"sourceType":"module"}