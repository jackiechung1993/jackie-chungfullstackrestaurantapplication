{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jackie-PC\\\\Documents\\\\MIT\\\\Module_29\\\\components\\\\dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!, $name: String) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes(where: { name_contains: $name }) {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\nfunction Dishes({\n  restId,\n  search\n}) {\n  const {\n    addItem\n  } = useContext(AppContext);\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId,\n      name: search\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (!data || !data.restaurant) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, \"No Dishes Found\");\n  const restaurant = data.restaurant;\n  return __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, restaurant.dishes.map(dish => __jsx(Col, {\n    xs: \"6\",\n    sm: \"4\",\n    style: {\n      padding: 0\n    },\n    key: dish.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    style: {\n      margin: \"0 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    style: {\n      height: 150,\n      width: 150\n    },\n    src: `http://localhost:1337${dish.image.url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, dish.name), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, dish.description)), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    color: \"info\",\n    outline: true,\n    onClick: () => addItem(dish),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"+ Add To Cart\"))))));\n}\n\nexport default Dishes;","map":{"version":3,"sources":["C:/Users/Jackie-PC/Documents/MIT/Module_29/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","GET_RESTAURANT_DISHES","Dishes","restId","search","addItem","router","loading","error","data","variables","id","name","message","restaurant","dishes","map","dish","padding","margin","height","width","image","url","description"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!, $name: String) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes(where: { name_contains: $name }) {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\nfunction Dishes({ restId, search }) {\n  const { addItem } = useContext(AppContext);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId, name: search },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  if (!data || !data.restaurant) return <p>No Dishes Found</p>;\n\n  const restaurant = data.restaurant;\n\n  return (\n    <Row>\n      {restaurant.dishes.map((dish) => (\n        <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={dish.id}>\n          <Card style={{ margin: \"0 10px\" }}>\n            <CardImg\n              top={true}\n              style={{ height: 150, width: 150 }}\n              src={`http://localhost:1337${dish.image.url}`}\n            />\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n            <div className=\"card-footer\">\n              <Button\n                color=\"info\"\n                outline\n                onClick={() => addItem(dish)}\n              >\n                + Add To Cart\n              </Button>\n            </div>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default Dishes;\n"]},"metadata":{},"sourceType":"module"}