{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jackie-PC\\\\Documents\\\\MIT\\\\restaurantapp\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($name: String!) {\\n    restaurants(where: { name_contains: $name }) {\\n      id\\n      name\\n      description\\n      image {\\n        url\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, Container, Row, Col } from \"reactstrap\";\nvar GET_RESTAURANTS = gql(_templateObject());\n\nfunction RestaurantList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var search = _ref.search;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useQuery = useQuery(GET_RESTAURANTS, {\n    variables: {\n      name: search\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (!data || data.restaurants.length === 0) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 54\n    }\n  }, \"No Restaurants Found\");\n  var filteredRestaurants = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(search.toLowerCase());\n  });\n\n  var renderDishes = function renderDishes(restaurantID, searchQuery) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      search: searchQuery,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var restaurantList = filteredRestaurants.map(function (res) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\".concat(res.image.url),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      onClick: function onClick() {\n        return setRestaurantID(res.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, res.name))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, restaurantList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, restaurantID > 0 && renderDishes(restaurantID, search)));\n}\n\n_s(RestaurantList, \"WcSuvqEF33ZLcD4/eMK12nKSwhI=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/Jackie-PC/Documents/MIT/restaurantapp/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useState","AppContext","Button","Card","CardBody","CardImg","CardText","Container","Row","Col","GET_RESTAURANTS","RestaurantList","search","restaurantID","setRestaurantID","cart","variables","name","loading","error","data","message","restaurants","length","filteredRestaurants","filter","res","toLowerCase","includes","renderDishes","searchQuery","restaurantList","map","id","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nconst GET_RESTAURANTS = gql`\n  query($name: String!) {\n    restaurants(where: { name_contains: $name }) {\n      id\n      name\n      description\n      image {\n        url\n      }\n    }\n  }\n`;\n\nfunction RestaurantList({ search }) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n\n  const { loading, error, data } = useQuery(GET_RESTAURANTS, {\n    variables: { name: search },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  if (!data || data.restaurants.length === 0) return <p>No Restaurants Found</p>;\n\n  const filteredRestaurants = data.restaurants.filter((res) =>\n    res.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const renderDishes = (restaurantID, searchQuery) => {\n    return <Dishes restId={restaurantID} search={searchQuery} />;\n  };\n\n  const restaurantList = filteredRestaurants.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337${res.image.url}`}\n        />\n        <CardBody>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n          <Button color=\"info\" onClick={() => setRestaurantID(res.id)}>\n            {res.name}\n          </Button>\n        </div>\n      </Card>\n    </Col>\n  ));\n\n  return (\n    <Container>\n      <Row xs=\"3\">\n        {restaurantList}\n      </Row>\n      <Row xs=\"3\">\n        {restaurantID > 0 && renderDishes(restaurantID, search)}\n      </Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}