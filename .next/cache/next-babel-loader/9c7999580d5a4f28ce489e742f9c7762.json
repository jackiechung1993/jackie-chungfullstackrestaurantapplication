{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/app/components/dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!, $name: String) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes(where: { name_contains: $name }) {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nvar GET_RESTAURANT_DISHES = gql(_templateObject());\n\nfunction Dishes(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId,\n      search = _ref.search;\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId,\n      name: search\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (!data || !data.restaurant) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, \"No Dishes Found\");\n  var restaurant = data.restaurant;\n  return __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, restaurant.dishes.map(function (dish) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        padding: 0\n      },\n      key: dish.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 150,\n        width: 150\n      },\n      src: \"http://localhost:1337\".concat(dish.image ? dish.image.url : ''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, dish.name), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, dish.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      outline: true,\n      onClick: function onClick() {\n        return addItem(dish);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"+ Add To Cart\"))));\n  }));\n}\n\n_s(Dishes, \"vtRHQp6lQc3Q2aJTUYNXWFdCj/s=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["/app/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","GET_RESTAURANT_DISHES","Dishes","restId","search","addItem","router","variables","id","name","loading","error","data","message","restaurant","dishes","map","dish","padding","margin","height","width","image","url","description"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!, $name: String) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes(where: { name_contains: $name }) {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\nfunction Dishes({ restId, search }) {\n  const { addItem } = useContext(AppContext);\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId, name: search },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  if (!data || !data.restaurant) return <p>No Dishes Found</p>;\n\n  const restaurant = data.restaurant;\n\n  return (\n    <Row>\n      {restaurant.dishes.map((dish) => (\n        <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={dish.id}>\n          <Card style={{ margin: \"0 10px\" }}>\n            <CardImg\n              top={true}\n              style={{ height: 150, width: 150 }}\n              src={`http://localhost:1337${dish.image ? dish.image.url : ''}`}\n            />\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n            <div className=\"card-footer\">\n              <Button\n                color=\"info\"\n                outline\n                onClick={() => addItem(dish)}\n              >\n                + Add To Cart\n              </Button>\n            </div>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default Dishes;\n"]},"metadata":{},"sourceType":"module"}